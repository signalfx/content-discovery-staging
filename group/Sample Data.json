{
  "chartExports": [
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Comparison in max, min and P50 latencies.",
        "id": "Dp1KqwKAcAE",
        "importOf": "DfJt2qZAgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Max, P50 and min latency",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Latency (ms)",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Metric",
          "defaultPlotType": "LineChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Max latency",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "50th percentile latency",
              "label": "B",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "Min latency",
              "label": "C",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 300001,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.latency').max().publish(label='A')\nB = data('demo.trans.latency').percentile(pct=50).publish(label='B')\nC = data('demo.trans.latency').min().publish(label='C')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1Km2bAcFI",
        "importOf": "DfJt-zoAYAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Real time transaction latency vs. 3 minutes ago",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Latency (ms)",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Metric",
          "defaultPlotType": "LineChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "95th percentile of latency",
              "label": "A",
              "paletteIndex": 11,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "95th percentile of latency - 3 minutes ago",
              "label": "B",
              "paletteIndex": 2,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 180000,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.latency').percentile(pct=95).publish(label='A')\nB = data('demo.trans.latency').percentile(pct=95).timeshift('3m').publish(label='B')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Total no. hosts seen by load balancers.",
        "id": "Dp1KglGAcAI",
        "importOf": "DfJt08xAYHE",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Total no. hosts",
        "options": {
          "colorBy": "Dimension",
          "colorScale": null,
          "colorScale2": null,
          "maximumPrecision": null,
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Hosts seen by load balancers",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "refreshInterval": null,
          "secondaryVisualization": "None",
          "showSparkLine": false,
          "time": {
            "range": 900000,
            "type": "relative"
          },
          "timestampHidden": false,
          "type": "SingleValue",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.lb.hosts').sum().publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1Ki6fAcAA",
        "importOf": "DfJuBZCAYAI",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Interactive analytics",
        "options": {
          "markdown": "SignalFx lets you interact with your data to discover new insights, by applying analytics functions to it and by filtering or aggregating it using dimensions, properties or tags. \n\nIn the charts to the right, weâ€™ve added up the transactions from all the servers in the chart above. Click on the name of the charts, `2. Total transactions` or `3. Total transactions`, to see how they're built.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Moving average applied as smoothing function.",
        "id": "Dp1KnALAcAs",
        "importOf": "DfJt_U2AYAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Transactions per second by host and datacenter",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Transactions",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "AreaChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Transactions",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": true,
          "time": {
            "range": 60000,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').sum(by=['demo_host', 'demo_datacenter']).mean(over='15s').publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KjN_AcAE",
        "importOf": "DfJuBMLAgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Try it out for yourself",
        "options": {
          "markdown": "See if you can recreate the charts above, starting from a <a href=\"https://docs.signalfx.com/en/latest/easy-charts/easy-charts.html\" target=\"_blank\">blank dashboard</a> and using the metrics named `demo.trans.count` and `demo.trans.latency`. To build charts with both metrics on them (like Chart 4 above), see the documentation for <a href=\"https://docs.signalfx.com/en/latest/charts/chart-analytics.html#correlate-multiple\" target=\"_blank\">correlating multiple signals</a>. To build a chart that aggregates and groups by customer (like Chart 5 above), see the documentation for <a href=\"https://docs.signalfx.com/en/latest/charts/chart-analytics.html#comparing-aggregates-by-service-or-other-metadata\" target=\"_blank\">comparing aggregates by service or other metadata</a>.\n<br><br>As always, if you get stuck, you can search through our more extensive <a href=\"https://docs.signalfx.com/en/latest/charts/index.html\" target=\"_blank\">product documentation on chart creation</a> for more help. And when youâ€™re done exploring, go to the next dashboard named `Part 3` to see how to build a more sophisticated analytics pipeline.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Load balancing effectiveness is calculated as a ratio: standard deviation of the metric divided by its mean. Zero is ideal; higher is worse.",
        "id": "Dp1KjKfAcAA",
        "importOf": "DfJt7DxAYAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "7. Load balancing effectiveness",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Load balancing ratio",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": 0
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "LineChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "demo.trans.count - Mean",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "demo.trans.count - Standard Deviation",
              "label": "B",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "Load balancing ratio",
              "label": "C",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 300001,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count', filter=filter('demo_datacenter', 'Tokyo')).mean().publish(label='A', enable=False)\nB = data('demo.trans.count', filter=filter('demo_datacenter', 'Tokyo')).stddev().publish(label='B', enable=False)\nC = (B/A).publish(label='C')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1Ko8RAcAQ",
        "importOf": "DfJuBUvAcLs",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Try it out for yourself",
        "options": {
          "markdown": "See if you can recreate the charts above, starting from a <a href=\"https://docs.signalfx.com/en/latest/easy-charts/easy-charts.html\" target=\"_blank\">blank dashboard</a> and using the metric named `demo.trans.count`. If you get stuck, you can search through our more extensive <a href=\"https://docs.signalfx.com/en/latest/charts/index.html\" target=\"_blank\">product documentation on chart creation</a> for more help. \n<br><br> \nWhen youâ€™re done exploring, go to the next dashboard named `Part 2` to see how to take advantage of our rich analytics functionality.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Total transactions, visualized as stacked column charts with minimum resolution of 10s.",
        "id": "Dp1KgmZAcAI",
        "importOf": "DfJt07PAcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Total no. transactions",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Transactions",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "ColumnChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 10000,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "No. transactions",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": true,
          "time": {
            "range": 300000,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KnJRAcDE",
        "importOf": "DfJuAl1AcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Easy correlation",
        "options": {
          "markdown": "SignalFx makes it easy to visualize multiple plots on the same chart so that you can easily correlate the behavior of different metrics or sources.\n \nIn the chart to the right, weâ€™ve added an average latency metric to the same chart and set up a second y-axis for it, so you can see how latency relates to transaction volume.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Total transactions plotted vs. average latency, making use of 2 y-axes to highlight the correlation between the two metrics.",
        "id": "Dp1KjAEAcAA",
        "importOf": "DfJuAe9AYAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "4. Total transactions vs. latency",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Transactions",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            },
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Latency (ms)",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Metric",
          "defaultPlotType": "LineChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Total transactions",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "Avg. latency of transactions",
              "label": "B",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 1
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 300000,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').sum().publish(label='A')\nB = data('demo.trans.latency').mean().publish(label='B')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KmLMAcAs",
        "importOf": "DfJt7E_AcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Try it out for yourself",
        "options": {
          "markdown": "See if you can recreate the charts above, starting from a <a href=\"https://docs.signalfx.com/en/latest/easy-charts/easy-charts.html\" target=\"_blank\">blank dashboard</a> and using the metric named `demo.trans.count`. If you get stuck, you can search through our more extensive <a href=\"https://docs.signalfx.com/en/latest/charts/index.html\" target=\"_blank\">product documentation on chart creation</a> for more help. \nFor additional sample charts, go to the dashboard named `Sample charts`.\n<br>\n\nWhen youâ€™re done exploring, <a href=\"https://docs.signalfx.com/en/latest/getting-started/send-data.html\" target=\"_blank\">bring your own data into our system</a> and see what insights you can find in it, or learn <a href=\"https://docs.signalfx.com/en/latest/detect-alert/index.html\" target=\"_blank\">how to alert</a> on patterns, trends or anomalies in your applications or infrastructure.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KgxtAcFc",
        "importOf": "DfJt0wNAcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Latency per transaction by customer",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Latency (ms)",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "LineChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "demo.trans.latency - Sum by demo_customer",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "demo.trans.count - Sum by demo_customer",
              "label": "B",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "Latency per transaction",
              "label": "C",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 300001,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.latency').sum(by=['demo_customer']).publish(label='A', enable=False)\nB = data('demo.trans.count').sum(by=['demo_customer']).publish(label='B', enable=False)\nC = (A/B).publish(label='C')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KmyIAcEM",
        "importOf": "DfJt_07AcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Exploring SignalFx Further",
        "options": {
          "markdown": "If you're interested in monitoring infrastructure, <a href=\"https://docs.signalfx.com/en/zd-tutorials/getting-started/index.html\" target=\"_blank\">start</a> by installing <a href=\"https://docs.signalfx.com/en/latest/getting-started/send-data.html#install-agent\" target=\"_blank\">our agent</a> or <a href=\"https://docs.signalfx.com/en/latest/integrations/index.html\" target=\"_blank\">other integrations</a>. Since SignalFx is great for exploring metrics from any source, we've also injected some sample custom application data into your SignalFx environment and created sample charts from it. To check them out, start by going  to the list of tabs above and selecting `Part 1`.\n<br>\n\nIf you already have metrics in the environment and know what you want to do, go ahead and  <a href=\"https://docs.signalfx.com/en/latest/getting-started/get-around-ui.html#dashboards\" target=\"_blank\">create a new dashboard</a> by clicking on the new dashboard icon, and start making your own charts. If you get stuck or need any help, check out our <a href=\"https://docs.signalfx.com/en/latest\" target=\"_blank\">product documentation</a> or ask us a question at [support@signalfx.com](mailto:support@signalfx.com).",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1Kgc6AcAA",
        "importOf": "DfJt6tXAcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Sophisticated analysis",
        "options": {
          "markdown": "You can build analytics pipelines in SignalFx that take the output of an analytics function and use it as the input for another calculation. This provides tremendous flexibility: if you can come up with an equation, it can be expressed in our analytics.\n\nIn this case, we construct a load balancing effectiveness ratio that shows us that the latencies seen above are correlated with a high (and therefore poor) ratio. If we had been watching this ratio earlier, we would have known a problem existed.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Total transactions by customer, with smoothing function applied (mean:transformation 1m).",
        "id": "Dp1KgpnAcCw",
        "importOf": "DfJt083AgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "No. transactions per customer (1m mean)",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "LineChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Total transactions by customer",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 900000,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').sum(by=['demo_customer']).mean(over='1m').publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Total transactions across all customers and servers.",
        "id": "Dp1KkNvAcAA",
        "importOf": "DfJuBoQAYAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "2. Total transactions",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "LineChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Total transactions",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 300001,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').sum().publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Moving average of total transactions over previous 10 minutes. Plot color specified in plot actions menu.",
        "id": "Dp1Ko1pAcEQ",
        "importOf": "DfJt2DvAcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Total no. transactions",
        "options": {
          "colorBy": "Dimension",
          "colorScale": null,
          "colorScale2": null,
          "maximumPrecision": null,
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Total transactions (-10m)",
              "label": "A",
              "paletteIndex": 8,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "refreshInterval": null,
          "secondaryVisualization": "None",
          "showSparkLine": false,
          "time": {
            "range": 900000,
            "type": "relative"
          },
          "timestampHidden": false,
          "type": "SingleValue",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').mean(over='10m').sum().publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Red = above 250ms, green = below 220ms",
        "id": "Dp1KpGyAcAA",
        "importOf": "DfJt00NAYEs",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Latency heatmap",
        "options": {
          "colorBy": "Scale",
          "colorRange": null,
          "colorScale": null,
          "colorScale2": [
            {
              "gt": 250,
              "gte": null,
              "lt": null,
              "lte": null,
              "paletteIndex": 16
            },
            {
              "gt": 220,
              "gte": null,
              "lt": null,
              "lte": 250,
              "paletteIndex": 18
            },
            {
              "gt": null,
              "gte": null,
              "lt": null,
              "lte": 220,
              "paletteIndex": 14
            }
          ],
          "groupBy": [],
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "demo.trans.latency",
              "label": "A",
              "valuePrefix": "",
              "valueSuffix": "",
              "valueUnit": null
            }
          ],
          "refreshInterval": null,
          "sortDirection": "Ascending",
          "sortProperty": null,
          "time": {
            "range": 900000,
            "type": "relative"
          },
          "timestampHidden": false,
          "type": "Heatmap",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.latency').publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KjwpAcAA",
        "importOf": "DfJuBWvAgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Real time visibility",
        "options": {
          "markdown": "SignalFx lets you look at systems, application and business metrics with up to one second resolution. Sometimes, looking at one minute data just isnâ€™t good enough. \n\nTo the right, you can see some sample data, which reports the number of transactions per second that a demo app is processing. The data started streaming when your company first signed on to SignalFx, so you won't see any data before then. It's a live stream that updates every 5 seconds, and you can go even more fine-grained by choosing a different chart resolution.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Transaction count metrics with a smoothing function (mean:transformation for 30s) applied.",
        "id": "Dp1KmvJAcBU",
        "importOf": "DfJuBbRAcAE",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "1. Raw metrics on transaction count",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Transactions",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "AreaChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Transaction count (30s moving average)",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": true,
          "time": {
            "range": 300000,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').mean(over='30s').publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KnCwAcEY",
        "importOf": "DfJt-KsAcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Drill down",
        "options": {
          "markdown": "SignalFx makes it easy to drill down in your charts or dashboards so that you can focus on the most relevant segments of a population. It's a simple matter of applying the right filter.\n\nIn this example, weâ€™ve filtered out the transactions for the customer who wasn't seeing high latencies, and further grouped by servers. It seems that some are processing a lower number of transactions, which could indicate a load balancing problem.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Total transactions across all customers and servers.",
        "id": "Dp1Kl3bAcAE",
        "importOf": "DfJuB8eAcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "3. Total transactions",
        "options": {
          "colorBy": "Dimension",
          "colorScale": null,
          "colorScale2": null,
          "maximumPrecision": null,
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Total transactions",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "refreshInterval": 5000,
          "secondaryVisualization": "None",
          "showSparkLine": false,
          "time": {
            "range": 300001,
            "type": "relative"
          },
          "timestampHidden": false,
          "type": "SingleValue",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').sum().publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KptvAcAA",
        "importOf": "DfJt_JjAgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "The Basics",
        "options": {
          "markdown": "Welcome to SignalFx! To get you started, let's go over some basics. \n\n#####**Dashboards**\nWhether you are seeing how a code push impacts your resource utilization or tracking the behavior of <a href=\"https://docs.signalfx.com/en/latest/integrations/kubernetes-quickstart.html\" target=\"_blank\">Kubernetes</a>, a dashboard is the place to organize and share charts and notes (e.g. runbooks) about the things that matter to you. We provide built-in dashboards for many common resources and services once you start sending in metrics for them and let you <a href=\"https://docs.signalfx.com/en/latest/built-in-content/infra-nav.html\" target=\"_blank\">navigate</a> them easily.\n\n#####**Charts**\nThe fundamental unit of a dashboard is a chart. Our charts are vehicles for exploring and understanding your environment. With SignalFx, you can apply analytics to the raw metrics you send in,  <a href=\"https://docs.signalfx.com/en/latest/charts/chart-analytics.html\" target=\"_blank\">highlighting correlations, patterns and trends</a>. (You can also add text notes like this one to dashboards.)\n\n#####**Alerts**\nSignalFx makes it easy for you to determine when your apps or infrastructure are behaving within normal bounds, and to tell you when they're not. You can read more about setting up detectors and alerts in our <a href=\"https://docs.signalfx.com/en/latest/detect-alert/index.html\" target=\"_blank\">documentation</a>.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Number of transactions handled per host, not including those associated with samslack.com (which has consistently low latency).",
        "id": "Dp1Kj0sAcAI",
        "importOf": "DfJt7OAAgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "6. Transactions by server",
        "options": {
          "colorBy": "Dimension",
          "colorScale2": null,
          "legendOptions": {
            "fields": [
              {
                "enabled": true,
                "property": "demo_host"
              },
              {
                "enabled": false,
                "property": "sf_originatingMetric"
              },
              {
                "enabled": false,
                "property": "sf_metric"
              }
            ]
          },
          "maximumPrecision": 4,
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "No. transactions",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "refreshInterval": null,
          "secondaryVisualization": "Sparkline",
          "sortBy": "+value",
          "time": {
            "range": 900000,
            "type": "relative"
          },
          "type": "List",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count', filter=(not filter('demo_customer', 'samslack.com'))).sum(by=['demo_host']).publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Latency vs. transaction count on separate axes. Custom plot and chart type selected in plot B's plot actions menu.",
        "id": "Dp1Ko7PAcAA",
        "importOf": "DfJt0u7AYGg",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Latency vs. transction count",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Latency (ms)",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": 0
            },
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Transactions",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": 4000,
              "min": 0
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "AreaChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 10000,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Average latency",
              "label": "A",
              "paletteIndex": 2,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            },
            {
              "displayName": "Total transactions",
              "label": "B",
              "paletteIndex": 1,
              "plotType": "ColumnChart",
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 1
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 900000,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.latency').mean().publish(label='A')\nB = data('demo.trans.count').sum().publish(label='B')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Updated every 10s",
        "id": "Dp1KglzAcAA",
        "importOf": "DfJt00BAgAM",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Top hosts by transactions per second",
        "options": {
          "colorBy": "Dimension",
          "colorScale2": null,
          "legendOptions": {
            "fields": [
              {
                "enabled": true,
                "property": "demo_host"
              },
              {
                "enabled": false,
                "property": "sf_originatingMetric"
              },
              {
                "enabled": false,
                "property": "sf_metric"
              }
            ]
          },
          "maximumPrecision": 1,
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "No. transactions per sec",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "refreshInterval": null,
          "secondaryVisualization": "Sparkline",
          "sortBy": "-value",
          "time": {
            "range": 900000,
            "type": "relative"
          },
          "type": "List",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.count').sum(by=['demo_host']).publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "",
        "id": "Dp1KnBBAcIg",
        "importOf": "DfJuA1kAYAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Filtering and aggregation to reveal insights",
        "options": {
          "markdown": "You can slice and dice your data easily in SignalFx. Our analytics functions operate on any subset or grouping of metrics you can identify with tags, properties or dimensions.\n\nWhen troubleshooting, it's often worthwhile to determine whether any part of a population is behaving differently than others.  In this example, we're calculating the average latency per customer, which lets us see whether a particular customer is having a different experience.",
          "type": "Text"
        },
        "packageSpecifications": "",
        "programText": "",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Spread of latency values across time.",
        "id": "Dp1KmWKAcAQ",
        "importOf": "DfJt08yAcAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "Latency histogram",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Latency (ms)",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "Histogram",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Latency",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 300001,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.latency').publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    },
    {
      "chart": {
        "created": 0,
        "creator": null,
        "customProperties": {},
        "description": "Average latency by customer, across hosts.",
        "id": "Dp1KmQhAcAE",
        "importOf": "DfJuAm7AgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "name": "5. Average latency by customer",
        "options": {
          "areaChartOptions": {
            "showDataMarkers": false
          },
          "axes": [
            {
              "highWatermark": null,
              "highWatermarkLabel": null,
              "label": "Latency (ms)",
              "lowWatermark": null,
              "lowWatermarkLabel": null,
              "max": null,
              "min": null
            }
          ],
          "axisPrecision": null,
          "colorBy": "Dimension",
          "defaultPlotType": "LineChart",
          "eventPublishLabelOptions": [],
          "histogramChartOptions": {
            "colorThemeIndex": 16
          },
          "includeZero": false,
          "legendOptions": {
            "fields": null
          },
          "lineChartOptions": {
            "showDataMarkers": false
          },
          "onChartLegendOptions": {
            "dimensionInLegend": null,
            "showLegend": false
          },
          "programOptions": {
            "disableSampling": false,
            "maxDelay": null,
            "minimumResolution": 0,
            "timezone": null
          },
          "publishLabelOptions": [
            {
              "displayName": "Average latency by customer",
              "label": "A",
              "paletteIndex": null,
              "plotType": null,
              "valuePrefix": null,
              "valueSuffix": null,
              "valueUnit": null,
              "yAxis": 0
            }
          ],
          "showEventLines": false,
          "stacked": false,
          "time": {
            "range": 300001,
            "type": "relative"
          },
          "type": "TimeSeriesChart",
          "unitPrefix": "Metric"
        },
        "packageSpecifications": "",
        "programText": "A = data('demo.trans.latency').mean(by=['demo_customer']).publish(label='A')",
        "relatedDetectorIds": [],
        "tags": null
      }
    }
  ],
  "crossLinkExports": [],
  "dashboardExports": [
    {
      "dashboard": {
        "chartDensity": "DEFAULT",
        "charts": [
          {
            "chartId": "Dp1KnJRAcDE",
            "column": 0,
            "height": 1,
            "row": 0,
            "width": 6
          },
          {
            "chartId": "Dp1KjAEAcAA",
            "column": 6,
            "height": 1,
            "row": 0,
            "width": 6
          },
          {
            "chartId": "Dp1KnBBAcIg",
            "column": 0,
            "height": 1,
            "row": 1,
            "width": 6
          },
          {
            "chartId": "Dp1KmQhAcAE",
            "column": 6,
            "height": 1,
            "row": 1,
            "width": 6
          },
          {
            "chartId": "Dp1KjN_AcAE",
            "column": 0,
            "height": 1,
            "row": 2,
            "width": 12
          }
        ],
        "created": 0,
        "creator": null,
        "customProperties": null,
        "description": "SignalFx gives you real-time visualization and interactive analytics for systems, applications and business metrics. On this dashboard, we illustrate these capabilities with some sample data.",
        "discoveryOptions": null,
        "eventOverlays": [
          {
            "eventColorIndex": 2,
            "eventLine": true,
            "eventSignal": {
              "eventSearchText": "demo.trans.latency Detector",
              "eventType": "detectorEvents"
            },
            "label": "demo.trans.latency Detector",
            "overlayId": "wQ0tHS",
            "sources": []
          }
        ],
        "filters": {
          "sources": null,
          "time": null,
          "variables": null
        },
        "groupId": "Dp1KgbxAcAA",
        "id": "Dp1KsWsAcAw",
        "importOf": "DfJuACwAgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "locked": false,
        "maxDelayOverride": null,
        "name": "Part 2",
        "selectedEventOverlays": null,
        "tags": null
      }
    },
    {
      "dashboard": {
        "chartDensity": "DEFAULT",
        "charts": [
          {
            "chartId": "Dp1KptvAcAA",
            "column": 0,
            "height": 2,
            "row": 0,
            "width": 6
          },
          {
            "chartId": "Dp1KnALAcAs",
            "column": 6,
            "height": 1,
            "row": 0,
            "width": 6
          },
          {
            "chartId": "Dp1Km2bAcFI",
            "column": 6,
            "height": 1,
            "row": 1,
            "width": 6
          },
          {
            "chartId": "Dp1KmyIAcEM",
            "column": 0,
            "height": 1,
            "row": 2,
            "width": 12
          }
        ],
        "created": 0,
        "creator": null,
        "customProperties": null,
        "description": "A dashboard that introduces users to basic navigation in SignalFx. To explore SignalFx's features and benefits, please continue on to Part 1.",
        "discoveryOptions": null,
        "eventOverlays": [
          {
            "eventColorIndex": 2,
            "eventLine": true,
            "eventSignal": {
              "eventSearchText": "demo.trans.latency Detector",
              "eventType": "detectorEvents"
            },
            "label": "demo.trans.latency Detector",
            "overlayId": "xwZrJn",
            "sources": []
          }
        ],
        "filters": {
          "sources": null,
          "time": null,
          "variables": null
        },
        "groupId": "Dp1KgbxAcAA",
        "id": "Dp1Kq_9AcDQ",
        "importOf": "DfJt-PZAgAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "locked": false,
        "maxDelayOverride": null,
        "name": "Intro to SignalFx",
        "selectedEventOverlays": null,
        "tags": null
      }
    },
    {
      "dashboard": {
        "chartDensity": "DEFAULT",
        "charts": [
          {
            "chartId": "Dp1KjwpAcAA",
            "column": 0,
            "height": 1,
            "row": 0,
            "width": 6
          },
          {
            "chartId": "Dp1KmvJAcBU",
            "column": 6,
            "height": 1,
            "row": 0,
            "width": 6
          },
          {
            "chartId": "Dp1Ki6fAcAA",
            "column": 0,
            "height": 1,
            "row": 1,
            "width": 6
          },
          {
            "chartId": "Dp1KkNvAcAA",
            "column": 6,
            "height": 1,
            "row": 1,
            "width": 3
          },
          {
            "chartId": "Dp1Kl3bAcAE",
            "column": 9,
            "height": 1,
            "row": 1,
            "width": 3
          },
          {
            "chartId": "Dp1Ko8RAcAQ",
            "column": 0,
            "height": 1,
            "row": 2,
            "width": 12
          }
        ],
        "created": 0,
        "creator": null,
        "customProperties": null,
        "description": "SignalFx gives you real-time visualization and interactive analytics for systems, applications and business metrics. On this dashboard, we illustrate these capabilities with some sample data.",
        "discoveryOptions": null,
        "eventOverlays": null,
        "filters": {
          "sources": null,
          "time": null,
          "variables": null
        },
        "groupId": "Dp1KgbxAcAA",
        "id": "Dp1KsZ6AcB4",
        "importOf": "DfJuBRzAYAA",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "locked": false,
        "maxDelayOverride": null,
        "name": "Part 1",
        "selectedEventOverlays": null,
        "tags": null
      }
    },
    {
      "dashboard": {
        "chartDensity": "DEFAULT",
        "charts": [
          {
            "chartId": "Dp1KglGAcAI",
            "column": 0,
            "height": 1,
            "row": 0,
            "width": 4
          },
          {
            "chartId": "Dp1Ko1pAcEQ",
            "column": 4,
            "height": 1,
            "row": 0,
            "width": 4
          },
          {
            "chartId": "Dp1KglzAcAA",
            "column": 8,
            "height": 1,
            "row": 0,
            "width": 4
          },
          {
            "chartId": "Dp1KqwKAcAE",
            "column": 0,
            "height": 1,
            "row": 1,
            "width": 6
          },
          {
            "chartId": "Dp1KgmZAcAI",
            "column": 6,
            "height": 1,
            "row": 1,
            "width": 6
          },
          {
            "chartId": "Dp1KpGyAcAA",
            "column": 0,
            "height": 1,
            "row": 2,
            "width": 6
          },
          {
            "chartId": "Dp1KmWKAcAQ",
            "column": 6,
            "height": 1,
            "row": 2,
            "width": 6
          },
          {
            "chartId": "Dp1KgxtAcFc",
            "column": 6,
            "height": 2,
            "row": 3,
            "width": 6
          },
          {
            "chartId": "Dp1Ko7PAcAA",
            "column": 0,
            "height": 1,
            "row": 3,
            "width": 6
          },
          {
            "chartId": "Dp1KgpnAcCw",
            "column": 0,
            "height": 1,
            "row": 4,
            "width": 6
          }
        ],
        "created": 0,
        "creator": null,
        "customProperties": null,
        "description": "A dashboard full of charts using sample data.",
        "discoveryOptions": null,
        "eventOverlays": null,
        "filters": {
          "sources": null,
          "time": null,
          "variables": null
        },
        "groupId": "Dp1KgbxAcAA",
        "id": "Dp1KrtNAcAA",
        "importOf": "DfJt0u6AgAI",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "locked": false,
        "maxDelayOverride": null,
        "name": "Sample charts",
        "selectedEventOverlays": null,
        "tags": null
      }
    },
    {
      "dashboard": {
        "chartDensity": "DEFAULT",
        "charts": [
          {
            "chartId": "Dp1KnCwAcEY",
            "column": 0,
            "height": 1,
            "row": 0,
            "width": 6
          },
          {
            "chartId": "Dp1Kj0sAcAI",
            "column": 6,
            "height": 1,
            "row": 0,
            "width": 6
          },
          {
            "chartId": "Dp1Kgc6AcAA",
            "column": 0,
            "height": 1,
            "row": 1,
            "width": 6
          },
          {
            "chartId": "Dp1KjKfAcAA",
            "column": 6,
            "height": 1,
            "row": 1,
            "width": 6
          },
          {
            "chartId": "Dp1KmLMAcAs",
            "column": 0,
            "height": 1,
            "row": 2,
            "width": 12
          }
        ],
        "created": 0,
        "creator": null,
        "customProperties": null,
        "description": "SignalFx gives you real-time visualization and interactive analytics for systems, applications and business metrics. On this dashboard, we illustrate these capabilities with some sample data.",
        "discoveryOptions": null,
        "eventOverlays": null,
        "filters": {
          "sources": null,
          "time": null,
          "variables": null
        },
        "groupId": "Dp1KgbxAcAA",
        "id": "Dp1KrmsAcBE",
        "importOf": "DfJt5p1AYBo",
        "lastUpdated": 0,
        "lastUpdatedBy": null,
        "locked": false,
        "maxDelayOverride": null,
        "name": "Part 3",
        "selectedEventOverlays": null,
        "tags": null
      }
    }
  ],
  "groupExport": {
    "group": {
      "created": 0,
      "creator": null,
      "dashboards": [
        "Dp1Kq_9AcDQ",
        "Dp1KsZ6AcB4",
        "Dp1KsWsAcAw",
        "Dp1KrmsAcBE",
        "Dp1KrtNAcAA"
      ],
      "description": "Tutorial dashboards using sample data. Revised September 2017",
      "email": null,
      "id": "Dp1KgbxAcAA",
      "importDetails": {
        "hashCode": 1018772884,
        "importOf": "DfJt0swAcAA",
        "importTime": 1539909818488
      },
      "importOf": "DfJt0swAcAA",
      "importQualifiers": [
        {
          "filters": [],
          "metric": "demo.trans.count"
        }
      ],
      "lastUpdated": 0,
      "lastUpdatedBy": null,
      "name": "Sample Data",
      "teams": null
    }
  },
  "hashCode": -907963272,
  "id": "Dp1KgbxAcAA",
  "modelVersion": 1,
  "packageType": "GROUP"
}