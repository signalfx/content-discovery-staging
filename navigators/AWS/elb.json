{
  "hashCode" : -350985742,
  "id" : "DiVVOB3AYAA",
  "modelVersion" : 1,
  "navigatorExport" : {
    "navigator" : {
      "created" : 0,
      "creator" : null,
      "description" : "",
      "id" : "DiVVOB3AYAA",
      "importQualifiers" : [ {
        "filters" : [ {
          "not" : false,
          "property" : "_exists_",
          "values" : [ "LoadBalancerName" ]
        } ],
        "metric" : "RequestCount"
      } ],
      "lastUpdated" : 0,
      "lastUpdatedBy" : null,
      "name" : "ELB Load Balancers",
      "navigatorCategory" : "AWS",
      "navigatorType" : "elemental",
      "uiModel" : {
        "alertQuery" : "_exists_:LoadBalancerName",
        "category" : "AWS",
        "categoryPriority" : 100,
        "discoveryQuery" : [ "sf_key:LoadBalancerName" ],
        "displayName" : "ELB Load Balancers",
        "filterProperties" : null,
        "id" : "elb",
        "idName" : "Load Balancer | AZ ",
        "idTemplate" : "{{LoadBalancerName}} | {{AvailabilityZone}} ",
        "listColumns" : [ {
          "aggregate" : null,
          "displayName" : "ID",
          "format" : "id",
          "metric" : null,
          "property" : "id",
          "sortable" : null
        }, {
          "aggregate" : null,
          "displayName" : "Value",
          "format" : "Number",
          "metric" : null,
          "property" : "value",
          "sortable" : null
        }, {
          "aggregate" : null,
          "displayName" : "Availability Zone",
          "format" : null,
          "metric" : null,
          "property" : "AvailabilityZone",
          "sortable" : null
        } ],
        "metrics" : [ {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Requests per minute",
          "displayName" : "Requests / Min",
          "id" : "aws.elb.requests",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "RequestCount = data(\"RequestCount\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)",
            "varName" : "RequestCount"
          },
          "metricSelectors" : [ "RequestCount" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "Requests",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "HTTP 4XX and 5XX Error codes generated by the load balancer per minute",
          "displayName" : "ELB HTTP Errors",
          "id" : "aws.elb.http_errors",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "HTTP4ERRORS_CLASSIC1 = data(\"HTTPCode_ELB_4xx\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\"], \"AvailabilityZone\").scale(60)\nHTTP4ERRORS_APPLICATION1 = data(\"HTTPCode_ELB_4xx_Count\", filter=filter(\"namespace\", \"AWS/ApplicationELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nHTTP_4xx_ERROR_SUM1  = (HTTP4ERRORS_CLASSIC1 + HTTP4ERRORS_APPLICATION1)\nHTTP5ERRORS_CLASSIC1 = data(\"HTTPCode_ELB_5xx\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nHTTP5ERRORS_APPLICATION1 = data(\"HTTPCode_ELB_5xx_Count\", filter=filter(\"namespace\", \"AWS/ApplicationELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nHTTP_5xx_ERROR_SUM1  = (HTTP5ERRORS_CLASSIC1 + HTTP5ERRORS_APPLICATION1)\nHTTP_ERROR_SUM  = (HTTP_4xx_ERROR_SUM1 + HTTP_5xx_ERROR_SUM1)",
            "varName" : "HTTP_ERROR_SUM"
          },
          "metricSelectors" : [ "HTTPCode_ELB_4xx_Count", "HTTPCode_ELB_5xx_Count" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "Request Errors / min",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : 100,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#6bd37e", "#e2ed6a", "#e2ed6a", "#e2ed6a", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849", "#ea1849" ]
          },
          "description" : "Unhealthy Hosts / (Healthy Hosts + Unhealthy Hosts). Under 5% is Green, 5-20% Yellow, above 20% is Red",
          "displayName" : "Unhealthy Hosts %",
          "id" : "aws.elb.unhealthy_host_percent",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "HEALTHY_HOST_COUNT = data(\"HealthyHostCount\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"mean\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"])\nUNHEALTHY_HOST_COUNT = data(\"UnHealthyHostCount\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"mean\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"])\nUNHEALTHY_HOST_PERCENT = (UNHEALTHY_HOST_COUNT / (UNHEALTHY_HOST_COUNT + HEALTHY_HOST_COUNT)) * 100",
            "varName" : "UNHEALTHY_HOST_PERCENT"
          },
          "metricSelectors" : [ "HealthyHostCount" ],
          "type" : "metric",
          "valueFormat" : "Percentage",
          "valueLabel" : "Unhealthy Hosts %",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Total elapsed time from the load-balancer sends request to when host responds (HTTP) or connection is established (TCP)",
          "displayName" : "Latency (ms)",
          "id" : "aws.elb.latency",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "LATENCY = data(\"Latency\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"mean\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).mean(by=[\"LoadBalancerName\"]).scale(1000)",
            "varName" : "LATENCY"
          },
          "metricSelectors" : [ "Latency" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "Latency (ms)",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : 1024,
            "method" : "quantile",
            "minValue" : 0,
            "range" : null
          },
          "description" : "Pending requests since load-balancer was unable to establish a connection with a healthy hos (max: 1024)",
          "displayName" : "Surge Queue Length",
          "id" : "aws.elb.surgequeuelength",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "SURGE_QUEUE_LENGTH = data(\"SurgeQueueLength\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"mean\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).mean(by=[\"LoadBalancerName\"])",
            "varName" : "SURGE_QUEUE_LENGTH"
          },
          "metricSelectors" : [ "SurgeQueueLength" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "Surge Queue Length",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Error codes generated by the load balancer when a request is malformed or incomplete per minute",
          "displayName" : "ELB 4xx Errors",
          "id" : "aws.elb.http4errors",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "HTTP4ERRORS_CLASSIC = data(\"HTTPCode_ELB_4xx\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nHTTP4ERRORS_APPLICATION = data(\"HTTPCode_ELB_4xx_Count\", filter=filter(\"namespace\", \"AWS/ApplicationELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nHTTP_4xx_ERROR_SUM  = (HTTP4ERRORS_CLASSIC + HTTP4ERRORS_APPLICATION)",
            "varName" : "HTTP_4xx_ERROR_SUM"
          },
          "metricSelectors" : [ "HTTPCode_ELB_4xx" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "4xx Errors / min",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Error codes generated when there are no healthy instances registered to the load balancer, or if the request rate exceeds the capacity of the instances (spillover) or the load balancer, per minute",
          "displayName" : "ELB 5xx Errors",
          "id" : "aws.elb.http5errors",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "HTTP5ERRORS_CLASSIC = data(\"HTTPCode_ELB_5xx\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nHTTP5ERRORS_APPLICATION = data(\"HTTPCode_ELB_5xx_Count\", filter=filter(\"namespace\", \"AWS/ApplicationELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nHTTP_5xx_ERROR_SUM  = (HTTP5ERRORS_CLASSIC + HTTP5ERRORS_APPLICATION)",
            "varName" : "HTTP_5xx_ERROR_SUM"
          },
          "metricSelectors" : [ "HTTPCode_ELB_5xx" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "5xx Errors / min",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Number of Healthy Hosts",
          "displayName" : "Healthy Hosts",
          "id" : "aws.elb.healthyhostcount",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "HEALTHY_HOST_COUNT1 = data(\"HealthyHostCount\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"mean\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"])",
            "varName" : "HEALTHY_HOST_COUNT1"
          },
          "metricSelectors" : [ "HealthyHostCount" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "Healthy Hosts",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Number of UnHealthy Hosts",
          "displayName" : "UnHealthy Hosts",
          "id" : "aws.elb.unhealthyhostcount",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "UNHEALTHY_HOST_COUNT1 = data(\"UnHealthyHostCount\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"mean\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"])",
            "varName" : "UNHEALTHY_HOST_COUNT1"
          },
          "metricSelectors" : [ "UnHealthyHostCount" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "UnHealthy Hosts",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Number of connections that were not successfully established between the load balancer and target",
          "displayName" : "Back-End Connection Errors",
          "id" : "aws.elb.backendconnectionerrors",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "BACKEND_ERRORS_CLASSIC = data(\"BackendConnectionErrors\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nBACKEND_ERRORS_APPLICATION = data(\"TargetConnectionErrorCount\", filter=filter(\"namespace\", \"AWS/ApplicationELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)\nBACKEND_ERRORS_SUM  = (BACKEND_ERRORS_CLASSIC + BACKEND_ERRORS_APPLICATION)",
            "varName" : "BACKEND_ERRORS_SUM"
          },
          "metricSelectors" : [ "BackendConnectionErrors", "TargetConnectionErrorCount" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "Errors / min",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Requests that were rejected because the surge queue is full",
          "displayName" : "Spillover Count",
          "id" : "aws.elb.spillovercount",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "SPILLOVER_COUNT = data(\"SpilloverCount\", filter=filter(\"namespace\", \"AWS/ELB\") and filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"])",
            "varName" : "SPILLOVER_COUNT"
          },
          "metricSelectors" : [ "SpilloverCount" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "Spill Over Count",
          "valueType" : null
        }, {
          "coloring" : {
            "limits" : null,
            "maxValue" : null,
            "method" : "quantile",
            "minValue" : 0,
            "range" : [ "#bfd3e6", "#9ebcda", "#8c96c6", "#8856a7", "#810f7c" ]
          },
          "description" : "Total number of HTTP responses including 2XX, 3XX, 4XX, 5XX errors per minute",
          "displayName" : "Host HTTP Responses",
          "id" : "aws.elb.host_http_responses",
          "job" : {
            "filters" : [ {
              "not" : false,
              "property" : "_exists_",
              "propertyValue" : "AvailabilityZone",
              "type" : "property"
            } ],
            "resolution" : 300000,
            "template" : "RESPONSES_SUM = data(\"HTTPCode_*\", filter=filter(\"stat\", \"sum\") and filter(\"LoadBalancerName\", \"*\"){{#filter}} and {{{filter}}}{{/filter}}, extrapolation=\"last_value\", maxExtrapolations=2).sum(by=[\"LoadBalancerName\", \"AWSUniqueId\", \"AvailabilityZone\"]).scale(60)",
            "varName" : "RESPONSES_SUM"
          },
          "metricSelectors" : [ "HTTPCode_*" ],
          "type" : "metric",
          "valueFormat" : null,
          "valueLabel" : "# Responses",
          "valueType" : null
        } ],
        "mtsQuery" : "sf_metric:RequestCount AND sf_key:LoadBalancerName AND _exists_:LoadBalancerName",
        "propertyColumns" : [ [ {
          "header" : "AWS",
          "properties" : [ ]
        } ], [ {
          "header" : "Tags",
          "properties" : [ "sf_tags" ]
        }, {
          "header" : "Other",
          "properties" : [ ]
        } ] ],
        "proxyProperties" : null,
        "requiredProperties" : [ "LoadBalancerName" ],
        "singleHostSystemDashboardName" : null,
        "systemDashboardName" : null,
        "systemDashboardPrefix" : "ELB",
        "tooltipKeyList" : [ {
          "displayName" : "ID",
          "format" : null,
          "isSummaryProperty" : true,
          "property" : "id"
        }, {
          "displayName" : "Value",
          "format" : "Number",
          "isSummaryProperty" : true,
          "property" : "value"
        } ],
        "type" : "elemental",
        "unreleased" : false
      }
    }
  },
  "packageType" : "NAVIGATOR"
}